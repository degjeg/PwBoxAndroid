// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: pwbox.proto at 36:1
package com.pw.box.bean.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class FeedBackRequest extends Message<FeedBackRequest, FeedBackRequest.Builder> {
  public static final ProtoAdapter<FeedBackRequest> ADAPTER = new ProtoAdapter_FeedBackRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_CONTENT = "";

  public static final String DEFAULT_CONTACT = "";

  public static final String DEFAULT_UNAME = "";

  public static final String DEFAULT_APPVER = "";

  public static final String DEFAULT_ANDROIDVER = "";

  public static final String DEFAULT_PHONEMODEL = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String contact;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String uname;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String appVer;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String androidVer;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String phoneModel;

  public FeedBackRequest(String content, String contact, String uname, String appVer, String androidVer, String phoneModel) {
    this(content, contact, uname, appVer, androidVer, phoneModel, ByteString.EMPTY);
  }

  public FeedBackRequest(String content, String contact, String uname, String appVer, String androidVer, String phoneModel, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.content = content;
    this.contact = contact;
    this.uname = uname;
    this.appVer = appVer;
    this.androidVer = androidVer;
    this.phoneModel = phoneModel;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.content = content;
    builder.contact = contact;
    builder.uname = uname;
    builder.appVer = appVer;
    builder.androidVer = androidVer;
    builder.phoneModel = phoneModel;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FeedBackRequest)) return false;
    FeedBackRequest o = (FeedBackRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(content, o.content)
        && Internal.equals(contact, o.contact)
        && Internal.equals(uname, o.uname)
        && Internal.equals(appVer, o.appVer)
        && Internal.equals(androidVer, o.androidVer)
        && Internal.equals(phoneModel, o.phoneModel);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (contact != null ? contact.hashCode() : 0);
      result = result * 37 + (uname != null ? uname.hashCode() : 0);
      result = result * 37 + (appVer != null ? appVer.hashCode() : 0);
      result = result * 37 + (androidVer != null ? androidVer.hashCode() : 0);
      result = result * 37 + (phoneModel != null ? phoneModel.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (content != null) builder.append(", content=").append(content);
    if (contact != null) builder.append(", contact=").append(contact);
    if (uname != null) builder.append(", uname=").append(uname);
    if (appVer != null) builder.append(", appVer=").append(appVer);
    if (androidVer != null) builder.append(", androidVer=").append(androidVer);
    if (phoneModel != null) builder.append(", phoneModel=").append(phoneModel);
    return builder.replace(0, 2, "FeedBackRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<FeedBackRequest, Builder> {
    public String content;

    public String contact;

    public String uname;

    public String appVer;

    public String androidVer;

    public String phoneModel;

    public Builder() {
    }

    public Builder content(String content) {
      this.content = content;
      return this;
    }

    public Builder contact(String contact) {
      this.contact = contact;
      return this;
    }

    public Builder uname(String uname) {
      this.uname = uname;
      return this;
    }

    public Builder appVer(String appVer) {
      this.appVer = appVer;
      return this;
    }

    public Builder androidVer(String androidVer) {
      this.androidVer = androidVer;
      return this;
    }

    public Builder phoneModel(String phoneModel) {
      this.phoneModel = phoneModel;
      return this;
    }

    @Override
    public FeedBackRequest build() {
      return new FeedBackRequest(content, contact, uname, appVer, androidVer, phoneModel, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_FeedBackRequest extends ProtoAdapter<FeedBackRequest> {
    ProtoAdapter_FeedBackRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, FeedBackRequest.class);
    }

    @Override
    public int encodedSize(FeedBackRequest value) {
      return (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.content) : 0)
          + (value.contact != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.contact) : 0)
          + (value.uname != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.uname) : 0)
          + (value.appVer != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.appVer) : 0)
          + (value.androidVer != null ? ProtoAdapter.STRING.encodedSizeWithTag(5, value.androidVer) : 0)
          + (value.phoneModel != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.phoneModel) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, FeedBackRequest value) throws IOException {
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.content);
      if (value.contact != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.contact);
      if (value.uname != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.uname);
      if (value.appVer != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.appVer);
      if (value.androidVer != null) ProtoAdapter.STRING.encodeWithTag(writer, 5, value.androidVer);
      if (value.phoneModel != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.phoneModel);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public FeedBackRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.contact(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.uname(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.appVer(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.androidVer(ProtoAdapter.STRING.decode(reader)); break;
          case 6: builder.phoneModel(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public FeedBackRequest redact(FeedBackRequest value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
