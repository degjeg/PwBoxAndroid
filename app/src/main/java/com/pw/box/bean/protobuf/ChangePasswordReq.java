// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: pwbox.proto at 88:1
package com.pw.box.bean.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ChangePasswordReq extends Message<ChangePasswordReq, ChangePasswordReq.Builder> {
  public static final ProtoAdapter<ChangePasswordReq> ADAPTER = new ProtoAdapter_ChangePasswordReq();

  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_OLD_PASSWORD = ByteString.EMPTY;

  public static final ByteString DEFAULT_NEW_PASSWORD = ByteString.EMPTY;

  public static final ByteString DEFAULT_RAW_KEY_BY_PASSWORD = ByteString.EMPTY;

  /**
   * old password
   */
  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString old_password;

  /**
   * new password
   */
  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString new_password;

  /**
   *  new key encryped with password
   */
  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString raw_key_by_password;

  public ChangePasswordReq(ByteString old_password, ByteString new_password, ByteString raw_key_by_password) {
    this(old_password, new_password, raw_key_by_password, ByteString.EMPTY);
  }

  public ChangePasswordReq(ByteString old_password, ByteString new_password, ByteString raw_key_by_password, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.old_password = old_password;
    this.new_password = new_password;
    this.raw_key_by_password = raw_key_by_password;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.old_password = old_password;
    builder.new_password = new_password;
    builder.raw_key_by_password = raw_key_by_password;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ChangePasswordReq)) return false;
    ChangePasswordReq o = (ChangePasswordReq) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(old_password, o.old_password)
        && Internal.equals(new_password, o.new_password)
        && Internal.equals(raw_key_by_password, o.raw_key_by_password);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (old_password != null ? old_password.hashCode() : 0);
      result = result * 37 + (new_password != null ? new_password.hashCode() : 0);
      result = result * 37 + (raw_key_by_password != null ? raw_key_by_password.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (old_password != null) builder.append(", old_password=").append(old_password);
    if (new_password != null) builder.append(", new_password=").append(new_password);
    if (raw_key_by_password != null) builder.append(", raw_key_by_password=").append(raw_key_by_password);
    return builder.replace(0, 2, "ChangePasswordReq{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ChangePasswordReq, Builder> {
    public ByteString old_password;

    public ByteString new_password;

    public ByteString raw_key_by_password;

    public Builder() {
    }

    /**
     * old password
     */
    public Builder old_password(ByteString old_password) {
      this.old_password = old_password;
      return this;
    }

    /**
     * new password
     */
    public Builder new_password(ByteString new_password) {
      this.new_password = new_password;
      return this;
    }

    /**
     *  new key encryped with password
     */
    public Builder raw_key_by_password(ByteString raw_key_by_password) {
      this.raw_key_by_password = raw_key_by_password;
      return this;
    }

    @Override
    public ChangePasswordReq build() {
      return new ChangePasswordReq(old_password, new_password, raw_key_by_password, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ChangePasswordReq extends ProtoAdapter<ChangePasswordReq> {
    ProtoAdapter_ChangePasswordReq() {
      super(FieldEncoding.LENGTH_DELIMITED, ChangePasswordReq.class);
    }

    @Override
    public int encodedSize(ChangePasswordReq value) {
      return (value.old_password != null ? ProtoAdapter.BYTES.encodedSizeWithTag(1, value.old_password) : 0)
          + (value.new_password != null ? ProtoAdapter.BYTES.encodedSizeWithTag(2, value.new_password) : 0)
          + (value.raw_key_by_password != null ? ProtoAdapter.BYTES.encodedSizeWithTag(3, value.raw_key_by_password) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ChangePasswordReq value) throws IOException {
      if (value.old_password != null) ProtoAdapter.BYTES.encodeWithTag(writer, 1, value.old_password);
      if (value.new_password != null) ProtoAdapter.BYTES.encodeWithTag(writer, 2, value.new_password);
      if (value.raw_key_by_password != null) ProtoAdapter.BYTES.encodeWithTag(writer, 3, value.raw_key_by_password);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ChangePasswordReq decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.old_password(ProtoAdapter.BYTES.decode(reader)); break;
          case 2: builder.new_password(ProtoAdapter.BYTES.decode(reader)); break;
          case 3: builder.raw_key_by_password(ProtoAdapter.BYTES.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ChangePasswordReq redact(ChangePasswordReq value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
