// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: pwbox.proto at 108:1
package com.pw.box.bean.protobuf;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Item extends Message<Item, Item.Builder> {
  public static final ProtoAdapter<Item> ADAPTER = new ProtoAdapter_Item();

  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_TYPE = 0;

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_VALUE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer type;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String value;

  public Item(Integer type, String name, String value) {
    this(type, name, value, ByteString.EMPTY);
  }

  public Item(Integer type, String name, String value, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.type = type;
    this.name = name;
    this.value = value;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.type = type;
    builder.name = name;
    builder.value = value;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Item)) return false;
    Item o = (Item) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(type, o.type)
        && Internal.equals(name, o.name)
        && Internal.equals(value, o.value);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (value != null ? value.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (type != null) builder.append(", type=").append(type);
    if (name != null) builder.append(", name=").append(name);
    if (value != null) builder.append(", value=").append(value);
    return builder.replace(0, 2, "Item{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Item, Builder> {
    public Integer type;

    public String name;

    public String value;

    public Builder() {
    }

    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder value(String value) {
      this.value = value;
      return this;
    }

    @Override
    public Item build() {
      return new Item(type, name, value, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Item extends ProtoAdapter<Item> {
    ProtoAdapter_Item() {
      super(FieldEncoding.LENGTH_DELIMITED, Item.class);
    }

    @Override
    public int encodedSize(Item value) {
      return (value.type != null ? ProtoAdapter.INT32.encodedSizeWithTag(1, value.type) : 0)
          + (value.name != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.name) : 0)
          + (value.value != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.value) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Item value) throws IOException {
      if (value.type != null) ProtoAdapter.INT32.encodeWithTag(writer, 1, value.type);
      if (value.name != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      if (value.value != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.value);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Item decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.type(ProtoAdapter.INT32.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.value(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Item redact(Item value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
